// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sereno.System.DataAccess;

#nullable disable

namespace Sereno.Identity.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sereno.System.DataAccess.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vId");

                    b.Property<DateTime?>("Create")
                        .HasColumnType("datetime2")
                        .HasColumnName("dCreate");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vCreateUser");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vDescription");

                    b.Property<DateTime?>("Modify")
                        .HasColumnType("datetime2")
                        .HasColumnName("dModify");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vModifyUser");

                    b.HasKey("Id");

                    b.ToTable("syrGrp");

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Sereno.System.DataAccess.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vId");

                    b.Property<DateTime?>("Create")
                        .HasColumnType("datetime2")
                        .HasColumnName("dCreate");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vCreateUser");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vEmail");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("vHash");

                    b.Property<DateTime?>("Modify")
                        .HasColumnType("datetime2")
                        .HasColumnName("dModify");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vModifyUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vName");

                    b.HasKey("Id");

                    b.ToTable("syrUsr");

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Sereno.System.DataAccess.Entities.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vId");

                    b.Property<DateTime?>("Create")
                        .HasColumnType("datetime2")
                        .HasColumnName("dCreate");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vCreateUser");

                    b.Property<DateTime?>("Modify")
                        .HasColumnType("datetime2")
                        .HasColumnName("dModify");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("vModifyUser");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("vRoleId");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vUserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("syrUsrGrp");

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Sereno.System.DataAccess.Entities.UserRole", b =>
                {
                    b.HasOne("Sereno.System.DataAccess.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sereno.System.DataAccess.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
